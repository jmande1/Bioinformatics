1+100
1+100
1+
2
1+
3+5+2
(3+5)/8
1.234x10^8
1.234*10^8
x <- 1/40
2+x
x<-1/45
_age<-2
1:5
2^(1:5)
ls()
ls
rm(x)
installed.packages()
install.packages("ggplot2")
library(base)
library(dada2); packageVersion("dada2")
directory<-"C:\Users\jmand\OneDrive\Desktop\Sketches\SchoolBS\VanLaar_Research (Fall 2023)\miseqsopdata\MiSeq_SOP"
directory<-"C:\Users\jmand\OneDrive\Desktop\Sketches\SchoolBS\miseqsopdata\MiSeq_SOP"
directory<-"C:\Users\jmand\Downloads\miseqsopdata"
directory<-"C:/Users/jmand/Downloads/miseqsopdata"
"~/MiSeq_SOP" <-file.path(directory)
path <- ~/MiSeq_SOP""
path <- "~/MiSeq_SOP"
list.files(path)
# Forward and reverse fastq filenames have format: SAMPLENAME_R1_001.fastq and SAMPLENAME_R2_001.fastq
library(dada2); packageVersion("dada2")
plotQualityProfile(fnFs[1:2])
# Forward and reverse fastq filenames have format: SAMPLENAME_R1_001.fastq and SAMPLENAME_R2_001.fastq
fnFs <- sort(list.files(path, pattern="_R1_001.fastq", full.names = TRUE))
fnRs <- sort(list.files(path, pattern="_R2_001.fastq", full.names = TRUE))
# Extract sample names, assuming filenames have format: SAMPLENAME_XXX.fastq
sample.names <- sapply(strsplit(basename(fnFs), "_",`[`,1))
sample.names <- sapply(strsplit(basename(fnFs), "_", `[`,1))
sample.names <- sapply(strsplit(basename(fnFs), "_"), `[`, 1)
plotQualityProfile(fnFs[1:2])
path <- "C:\Users\jmand\OneDrive\Desktop\Sketches\SchoolBS\VanLaar_Research (Fall 2023)\miseqsopdata.zip\MiSeq_SOP"
path <- "C:/Users/jmand/OneDrive/Desktop/Sketches/SchoolBS/VanLaar_Research (Fall 2023)/miseqsopdata.zip/MiSeq_SOP"
fnFs <- sort(list.files(path, pattern="_R1_001.fastq", full.names = TRUE))
fnRs <- sort(list.files(path, pattern="_R2_001.fastq", full.names = TRUE))
sample.names <- sapply(strsplit(basename(fnFs), "_"), `[`, 1)
plotQualityProfile(fnFs[1:2])
list.files(path)
View(sample.names)
View(sample.names)
View(sample.names)
View(sample.names)
View(sample.names)
load("C:/Users/jmand/OneDrive/Desktop/Sketches/SchoolBS/VanLaar_Research (Fall 2023)/miseqsopdata.zip")
load("C:/Users/jmand/OneDrive/Desktop/Sketches/SchoolBS/VanLaar_Research (Fall 2023)/miseqsopdata/MiSeq_SOP/F3D0_S188_L001_R1_001.fastq")
setwd("D:/Bioinformatics/MicrobiomeDADA2")
library(dada2)
path <- "sequences"
list.files(path)
# Forward fastq filenames have format: SAMPLENAME_R1_001.fastq
fnFs <- sort(list.files(path, pattern="_R1_001.fastq", full.names = TRUE))
# Extract sample names, assuming filenames have format: SAMPLENAME_XXX.fastq
sample.names <- sapply(strsplit(basename(fnFs), "_"), `[`, 1)
plotQualityProfile(fnFs[1:2])
# Place filtered files in filtered/ subdirectory
filtFs <- file.path(path, "filtered", paste0(sample.names, "_F_filt.fastq.gz"))
names(filtFs) <- sample.names
# quality decreases at 120
out <- filterAndTrim(fnFs, filtFs, truncLen=c(120),
maxN=0, maxEE=c(2), truncQ=2, rm.phix=TRUE,
compress=TRUE, multithread=FALSE) # On Windows set multithread=FALSE
head(out)
errF <- learnErrors(filtFs, multithread=FALSE)
plotErrors(errF, nominalQ=TRUE)
dadaFs <- dada(filtFs, err=errF, multithread=FALSE)
seqtab <- makeSequenceTable(dadaFs)
dim(seqtab)
# Inspect distribution of sequence lengths
table(nchar(getSequences(seqtab)))
seqtab.nochim <- removeBimeraDenovo(seqtab, method="consensus", multithread=FALSE, verbose=TRUE)
dim(seqtab.nochim)
getN <- function(x) sum(getUniques(x))
track <- cbind(out, sapply(dadaFs, getN), rowSums(seqtab.nochim))
colnames(track) <- c("input", "filtered", "denoisedF", "nonchim")
rownames(track) <- sample.names
head(track)
save(seqtab.nochim, file="RData/seqtab.nochim,RData")
load("RData/seqtab.nochim,RData")
# download the Silva species database from https://zenodo.org/records/4587955
taxa <- assignTaxonomy(seqtab.nochim,
"silva_nr99_v138.1_wSpecies_train_set.fa.gz")
save(taxa, file = "RData/taxa.RData")
library(dada2)
path <- "sequences"
list.files(path)
# Forward fastq filenames have format: SAMPLENAME_R1_001.fastq
fnFs <- sort(list.files(path, pattern="_R1_001.fastq", full.names = TRUE))
# Extract sample names, assuming filenames have format: SAMPLENAME_XXX.fastq
sample.names <- sapply(strsplit(basename(fnFs), "_"), `[`, 1)
plotQualityProfile(fnFs[1:2])
# Place filtered files in filtered/ subdirectory
filtFs <- file.path(path, "filtered", paste0(sample.names, "_F_filt.fastq.gz"))
names(filtFs) <- sample.names
# quality decreases at 120
out <- filterAndTrim(fnFs, filtFs, truncLen=c(120),
maxN=0, maxEE=c(2), truncQ=2, rm.phix=TRUE,
compress=TRUE, multithread=FALSE) # On Windows set multithread=FALSE
head(out)
errF <- learnErrors(filtFs, multithread=FALSE)
plotErrors(errF, nominalQ=TRUE)
dadaFs <- dada(filtFs, err=errF, multithread=FALSE)
seqtab <- makeSequenceTable(dadaFs)
dim(seqtab)
# Inspect distribution of sequence lengths
table(nchar(getSequences(seqtab)))
seqtab.nochim <- removeBimeraDenovo(seqtab, method="consensus", multithread=FALSE, verbose=TRUE)
dim(seqtab.nochim)
getN <- function(x) sum(getUniques(x))
track <- cbind(out, sapply(dadaFs, getN), rowSums(seqtab.nochim))
colnames(track) <- c("input", "filtered", "denoisedF", "nonchim")
rownames(track) <- sample.names
head(track)
save(seqtab.nochim, file="RData/seqtab.nochim,RData")
load("RData/seqtab.nochim,RData")
source('http://bioconductor.org/biocLite.R')
if (!require("BiocManager", quietyly = TRUE))
install.packages("BiocManager")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("phyloseq")
library(phyloseq)
load("RData/taxa.RData")
load("RData/seqtab.nochim.RData")
setwd("D:/Bioinformatics/MicrobiomeDADA2")
load("RData/taxa.RData")
load("RData/seqtab.nochim.RData")
load("RData/taxa.RData")
load("RData/taxa.RData")
load("RData/seqtab.nochim,RData")
metadata<-read.csv("metadata.csv", header=TRUE, row.names=1)
setwd("D:/Bioinformatics/MicrobiomeDADA2")
library(phyloseq)
library(dplyr) # alternative installation of the %>%
library(BiMiCo)
load("RData/taxa.RData")
load("RData/seqtab.nochim,RData")
load("RData/physeq.RData")
library(phyloseq)
library(dplyr) # alternative installation of the %>%
library(BiMiCo)
library(ggplot2)
save(physeq, file="RData/physeq.RData")
library(phyloseq)
library(dplyr) # alternative installation of the %>%
library(BiMiCo)
library(ggplot2)
save(physeq, file="RData/physeq.RData")
load("RData/physeq.RData")
plot_bar(physeq, fill = "Phylum") + geom_bar(aes(color=Phylum, fill=phylum), stat="identity", position="fill")
